<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_exfo2_cmdb.EXFOStatusDictionary</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>EXFOStatusDictionary</name>
        <script><![CDATA[var EXFOStatusDictionary = Class.create();
EXFOStatusDictionary.prototype = {
    initialize: function() {
    },
	
	statusMap:{
		'IN SERVICE':{
			'stage': 'Operational',
			'status': 'In use'
		},
		'IN USE':{
			'stage': 'Operational',
			'status': 'In use'
		},
		'ACTIVE':{
			'stage': 'Operational',
			'status': 'In use'
		},
		'INACTIVE':{
			'stage': 'End of Life',
			'status': 'Retired'
		},
		'PLANNED':{
			'stage': 'Design',
			'status': 'Build'
		},
		'PENDING REMOVE':{
			'stage': 'Operational',
			'status': 'Pending Retirement'
		},
		'PLANNED FOR DELETE':{
			'stage': 'Operational',
			'status': 'Pending Retirement'
		},
		'UNDER CONSTRUCTION':{
			'stage': 'Operational',
			'status': 'In Maintenance'
		},
		'BLOCKED':{
			'stage': 'Defective',
			'status': 'In Stock'
		},
		'RESERVED':{
			'stage': 'Deploy',
			'status': 'Reserved'
		},
		'IN PROGRESS':{
			'stage': 'Design',
			'status': 'Build'
		},
		'DESIGN COMPLETE':{
			'stage': 'Design',
			'status': 'Build'
		},
		'PENDING DISCONNECT':{
			'stage': 'Operational',
			'status': 'Pending Retirement'
		},
		'BLOCKED IN SERVICE':{
			'stage': 'Defective',
			'status': 'In Stock'
		},
		'DELETED':{
			'stage': 'End of Life',
			'status': 'Retired'
		}
	},
	
	getSNValues: function(exfoStatus){
		if(!exfoStatus){
			return '';
		}
		
		var status;
		var stage;
		var overrides = this._calculateStatusOverrides(exfoStatus);
		if(overrides){
			stage = overrides.stage;
			status = overrides.status;
		}
		else{
			stage = this.statusMap[exfoStatus].stage;
			status = this.statusMap[exfoStatus].status;
		}
		
		var returnString = stage + '|||' + status;
		return returnString;
	},
	
	_calculateStatusOverrides: function (exfoStatus) {
        var eps = new GlideScriptedExtensionPoint().getExtensions("SGEXFOStatusMapOverride");
        for (var i = 0; i < eps.length; i++) {
            try {
                var ep = eps[i];
                var statusObj = ep.calculateStatus(exfoStatus);
            } catch (e) {
                gs.error('SGEXFO calculateStatusOverrides: ' + JSON.stringify(e));
            }
        }
        return statusObj;
    },

    type: 'EXFOStatusDictionary'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>aveenstra</sys_created_by>
        <sys_created_on>2021-11-16 14:07:21</sys_created_on>
        <sys_id>1bac46e687fb30503e867518cebb358e</sys_id>
        <sys_mod_count>23</sys_mod_count>
        <sys_name>EXFOStatusDictionary</sys_name>
        <sys_package display_value="Service Graph Connector for EXFO" source="x_exfo2_cmdb">aa514eec877274103e867518cebb35ae</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Service Graph Connector for EXFO">aa514eec877274103e867518cebb35ae</sys_scope>
        <sys_update_name>sys_script_include_1bac46e687fb30503e867518cebb358e</sys_update_name>
        <sys_updated_by>alex.frankel@exfo.com</sys_updated_by>
        <sys_updated_on>2024-05-03 12:04:06</sys_updated_on>
    </sys_script_include>
</record_update>
